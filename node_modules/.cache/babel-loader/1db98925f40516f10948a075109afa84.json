{"ast":null,"code":"export const BASE_URL = \"http://localhost:8080/\";\nlet obj = {\n  get(url) {\n    const METHOD = 'get';\n    return doHttpCall(url, METHOD);\n  },\n\n  post(url, body) {\n    const METHOD = 'post';\n    return doHttpCall(url, METHOD, body);\n  },\n\n  put(url, body) {\n    const METHOD = 'put';\n    return doHttpCall(url, METHOD, body);\n  },\n\n  delete(url, body) {\n    const METHOD = 'delete';\n    return doHttpCall(url, METHOD, body);\n  }\n\n};\n\nasync function doHttpCall(url, method, body) {\n  const NEW_URL = BASE_URL + url;\n  const header = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  };\n  const promise = new Promise((resolve, reject) => {\n    let options = {\n      method: method,\n      headers: header\n    };\n\n    if (method === 'post' || method === 'put') {\n      options.body = JSON.stringify(body);\n    }\n\n    fetch(NEW_URL, options).then(response => {\n      resolve(response);\n    }).catch(message => {\n      reject(message);\n    });\n  });\n  return promise;\n}\n\nexport default obj;","map":{"version":3,"sources":["/Users/pushpendra/Documents/Panda/evouchersystemfrontend/src/service/httpService.js"],"names":["BASE_URL","obj","get","url","METHOD","doHttpCall","post","body","put","delete","method","NEW_URL","header","promise","Promise","resolve","reject","options","headers","JSON","stringify","fetch","then","response","catch","message"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wBAAjB;AAEP,IAAIC,GAAG,GAAG;AACNC,EAAAA,GAAG,CAACC,GAAD,EAAM;AACL,UAAMC,MAAM,GAAG,KAAf;AACA,WAAOC,UAAU,CAACF,GAAD,EAAMC,MAAN,CAAjB;AACH,GAJK;;AAKNE,EAAAA,IAAI,CAACH,GAAD,EAAMI,IAAN,EAAY;AACZ,UAAMH,MAAM,GAAG,MAAf;AACA,WAAOC,UAAU,CAACF,GAAD,EAAMC,MAAN,EAAcG,IAAd,CAAjB;AACH,GARK;;AASNC,EAAAA,GAAG,CAACL,GAAD,EAAMI,IAAN,EAAY;AACX,UAAMH,MAAM,GAAG,KAAf;AACA,WAAOC,UAAU,CAACF,GAAD,EAAMC,MAAN,EAAcG,IAAd,CAAjB;AACH,GAZK;;AAaNE,EAAAA,MAAM,CAACN,GAAD,EAAMI,IAAN,EAAY;AACd,UAAMH,MAAM,GAAG,QAAf;AACA,WAAOC,UAAU,CAACF,GAAD,EAAMC,MAAN,EAAcG,IAAd,CAAjB;AACH;;AAhBK,CAAV;;AAmBA,eAAeF,UAAf,CAA0BF,GAA1B,EAA+BO,MAA/B,EAAuCH,IAAvC,EAA6C;AAEzC,QAAMI,OAAO,GAAGX,QAAQ,GAAGG,GAA3B;AACA,QAAMS,MAAM,GAAG;AACX,cAAU,kBADC;AAEX,oBAAgB;AAFL,GAAf;AAIA,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7C,QAAIC,OAAO,GAAG;AACVP,MAAAA,MAAM,EAAEA,MADE;AAEVQ,MAAAA,OAAO,EAAEN;AAFC,KAAd;;AAIA,QAAIF,MAAM,KAAK,MAAX,IAAqBA,MAAM,KAAK,KAApC,EAA2C;AACvCO,MAAAA,OAAO,CAACV,IAAR,GAAeY,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAf;AACH;;AACDc,IAAAA,KAAK,CAACV,OAAD,EAAUM,OAAV,CAAL,CACKK,IADL,CACWC,QAAD,IAAc;AAChBR,MAAAA,OAAO,CAACQ,QAAD,CAAP;AACH,KAHL,EAGOC,KAHP,CAGcC,OAAD,IAAa;AACtBT,MAAAA,MAAM,CAACS,OAAD,CAAN;AACH,KALD;AAMH,GAde,CAAhB;AAeA,SAAOZ,OAAP;AACH;;AAED,eAAeZ,GAAf","sourcesContent":["export const BASE_URL = \"http://localhost:8080/\";\n\nlet obj = {\n    get(url) {\n        const METHOD = 'get';\n        return doHttpCall(url, METHOD);\n    },\n    post(url, body) {\n        const METHOD = 'post';\n        return doHttpCall(url, METHOD, body);\n    },\n    put(url, body) {\n        const METHOD = 'put';\n        return doHttpCall(url, METHOD, body);\n    },\n    delete(url, body) {\n        const METHOD = 'delete';\n        return doHttpCall(url, METHOD, body);\n    }\n};\n\nasync function doHttpCall(url, method, body) {\n\n    const NEW_URL = BASE_URL + url;\n    const header = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    const promise = new Promise((resolve, reject) => {\n        let options = {\n            method: method,\n            headers: header\n        };\n        if (method === 'post' || method === 'put') {\n            options.body = JSON.stringify(body)\n        }\n        fetch(NEW_URL, options)\n            .then((response) => {\n                resolve(response)\n            }).catch((message) => {\n            reject(message);\n        });\n    });\n    return promise;\n}\n\nexport default obj;"]},"metadata":{},"sourceType":"module"}